Performing Git Operations

Git Command file

-Genrating Local Repo Author and Email in Git 
- Use git config --global user.name "ShivaAB"
- Use git config --global user.email "Shivvaprasadabburi@gmail.com"
- Go to Home Director use cd
- Use ls -lrta --- you will find .gitconfig file
- Do cat .gitconfig -- you will find credentials of author
- Perform git init --- to initialise local Repository
- git status --- to find the status of the files created
- git add file name or git add . (for all files) --- to move the files to staged area
- git commit -m "Message" - Commiting files on Local Repository
- git remote add origin URL : SSH/HTTPs --- for connectig to Remote Repository, uses protocol TCP 22 and HTTPS 443
- ssh-keygen --- to crate public private key
- cd to move to home and do cd .ssh/ and ls -lrta to find the keys
- cat idrsa.pub --- to view the kay and copy the key, on github settings ---> Developer Settings--> SSH and GCP
- git push origin main --- pushing to the main or Master branch
- git branch --- to list the branches and green color is working branch
- git branch -M  branchname --- to modify the branch name
- git pull origin main --- if any changes are made in the remote side by one developer then remote side commit is not available in the Local side, to match the commits on local side side we use git pull
- git clone URL --- for cloning the Remote Repo viz copying remote repo to Local machine
- If some changes are made in one file Remote side and commited, simultaniously Local side we made changes in different file, then we cant push to the remote side from local without pulling remote side changes
- The above process (24) creates an extra commit for merging to main branch 
- 
- If some changes are made in Remote side and commited, simultaniously Local side we made changes, then we cant push to the remote side without pulling remote side changes Viz must match the commits
- If we make changes in the same file from remote and Local side, then we will face a merge conflict Error
- After eliminating conflict again an extra commit is created, if this is repeated with hundreds of delopers then user readability will miss
- To over come extra commit we use git Stash Command
- We use stash before adding and commiting the local changes
- If we pull without staching we will see an error please clean the working tree 
